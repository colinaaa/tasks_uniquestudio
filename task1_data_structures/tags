!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
List_Header	list.c	/^typedef Pointer2Node List_Header;$/;"	t	file:
Next	list.c	/^		Position Next;$/;"	m	struct:Node	file:
Node	list.c	/^struct Node$/;"	s	file:
Pointer2Node	list.c	/^typedef struct Node *Pointer2Node;$/;"	t	typeref:struct:Node	file:
Position	list.c	/^typedef Pointer2Node Position;$/;"	t	file:
delete_element	list.c	/^void delete_element(int x,List_Header L)$/;"	f
delete_list	list.c	/^void delete_list(List_Header L)$/;"	f
element	list.c	/^		int element;$/;"	m	struct:Node	file:
find	list.c	/^Position find(int x, List_Header L)$/;"	f
find_previous	list.c	/^Position find_previous(int x, List_Header L)$/;"	f
initialize_a_list	list.c	/^List_Header initialize_a_list(int n)$/;"	f
insert	list.c	/^void insert (Position P, List_Header L, int x)\/\/insert x *behind* Position P$/;"	f
insertsort	insertsort.c	/^void insertsort(int a[], int n)$/;"	f
isEmpty	list.c	/^int isEmpty(List_Header L)$/;"	f
main	insertsort.c	/^int main(void)$/;"	f
main	list.c	/^int main(void)$/;"	f
print_the_list	list.c	/^void print_the_list(List_Header L)$/;"	f
